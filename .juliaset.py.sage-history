"class JuliaSet(object):\n\n    def __init__(self, c, n=100):\n        self.c = c\n        self.n = n\n        self._d = 0.001\n        self._complexplane=[]\n        self.set=[]\n\n    def juliamap(self, z):\n        return z**2 + self.c\n\n    def iterate(self, z):\n        m = 0\n        while True:\n            z = self.juliamap(z)\n            m +=1\n            if abs(z)>2:\n                return m\n            elif m>=self.n:\n                return 0\n    \n    def drange(self, start, stop, step):\n        r = start\n        while r <= stop:\n            yield r\n            r += step\n    \n    # Generate evenly spaced values over x and y planes\n    def get_complexplane(self):\n        self._complexplane = []\n        _range=self.drange(-2, 2, self._d)\n        for x in self.drange(-2, 2, self._d):\n            for y in self.drange(-2, 2, self._d):\n                self._complexplane.append(complex(x,y))\n    \n    def set_spacing(self, d):\n        self._d = d\n        self.get_complexplane()\n        \n    def generate(self):\n        self.set = [self.iterate(x) for x in self._complexplane]\n        return self.set\n"
{"patch":[[[[1,"import numpy as np\n\n"],[0,"class Ju"]],0,0,8,28],[[[0,"                "],[-1,"self."],[1,"np.append("],[0,"_complexplane.ap"]],858,858,37,42],[[[0,"lexplane"],[-1,".append("],[1,", "],[0,"complex("]],889,889,24,18],[[[0,"    "],[-1,"self.set = [self.iterate(x) for x in self._complexplane]"],[1,"for x in self._complexplane:\n            np.append(self.iterate(x), self.iterate(x))"],[0,"\n   "]],1037,1037,64,92],[[[0,"self.set"],[-1,"\n"]],1141,1141,9,8]],"time":1443523898069}
{"patch":[[[[0,".append("],[1,"self."],[0,"_complex"]],876,876,16,21]],"time":1443523896073}
{"patch":[[[[0,"append(s"],[-1,"elf."],[0,"_complex"]],877,877,20,16]],"time":1443523857925}
{"patch":[[[[0,".append("],[-1,"s"],[0,"_complex"]],876,876,17,16]],"time":1443523855929}
{"patch":[[[[-1,"import numpy as np\n\n"],[0,"clas"]],0,0,24,4],[[[0,"        "],[-1,"np.append("],[1,"self."],[0,"_complex"]],846,846,26,21],[[[0,"lexplane"],[-1,", "],[1,".append("],[0,"complex("]],864,864,18,24],[[[0,"    "],[-1,"for x in self._complexplane:\n            np.append(self.iterate(x), self.iterate(x))"],[1,"self.set = [self.iterate(x) for x in self._complexplane]"],[0,"\n   "]],1018,1018,92,64],[[[0," return self.set"],[1,"\n"]],1086,1086,16,17]],"time":1443523798105}
{"patch":[[[[0,"  for x in self."],[-1,"d"],[1,"my_"],[0,"range(-2, 2, sel"]],748,748,33,35]],"time":1443519018538}
{"patch":[[[[0," y in self.d"],[-1,"range"],[0,"(-2, 2, self"]],805,805,29,24]],"time":1443519016207}
{"patch":[[[[0,"in self."],[-1,"d"],[1,"my_range"],[0,"(-2, 2, "]],808,808,17,24]],"time":1443519014198}
{"patch":[[[[0," in "],[-1,"self.my_range(-2, 2, self._d):\n            for y in self.my_range(-2, 2, self._d)"],[1,"_range:\n            for y in _range"],[0,":\n  "]],755,755,89,43],[[[0,"mplex(x,"],[1," "],[0,"y))\n    "]],840,840,16,17]],"time":1443519010484}
{"patch":[[[[0,"explane(self"],[1,", d=0"],[0,"):\n"],[-1,""],[0,"        self"]],652,652,27,32],[[[0,"   for x in "],[1,"x"],[0,"_range:\n    "]],752,752,24,25],[[[0,"or y in "],[1,"y"],[0,"_range:\n"],[1,"                z = complex(x, y)\n"],[0,"        "]],786,786,24,59],[[[0,".append("],[-1,"complex(x, y)"],[1,"z"],[0,")\n    \n "]],871,871,29,17]],"time":1443518998930}
{"patch":[[[[0,"        "],[1,"x"],[0,"_range=s"]],704,704,16,17]],"time":1443518996926}
{"patch":[[[[0,"self"],[-1,", d=0"],[0,"):\n"],[1,""],[0,"    "]],660,660,16,11],[[[0,"        "],[-1,"x"],[0,"_range=s"]],699,699,17,16],[[[0,"or x in "],[-1,"x"],[0,"_range:\n"]],751,751,17,16],[[[0,"or y in "],[-1,"y"],[0,"_range:\n"]],780,780,17,16]],"time":1443518994932}
{"patch":[[[[0,"z = "],[-1,"complex(x, y)"],[0,"\n   "]],812,812,21,8],[[[0,".append("],[-1,"z"],[1,"complex(x, y)"],[0,")\n    \n "]],851,851,17,29]],"time":1443518992921}
{"patch":[[[[0,"ge:\n"],[-1,"                z = \n"],[0,"    "]],792,792,29,8]],"time":1443518990961}
{"patch":[[[[0,"or y in _range:\n"],[1,"                z = \n"],[0,"                "]],780,780,32,53],[[[0,"end("],[-1,"complex(x, y)"],[0,")\n  "]],855,855,21,8]],"time":1443518961573}
{"patch":[[[[0,".append("],[1,"z"],[0,")\n    \n "]],851,851,16,17]],"time":1443518959565}
{"patch":[[[[0,"    z = "],[1,"complex(x, y)"],[0,"\n       "]],808,808,16,29]],"time":1443518955625}
{"patch":[[[[0,"    "],[-1,"_range="],[1,"for x in "],[0,"self"]],703,703,15,17],[[[0,"._d)"],[-1,"\n        for x in _range:\n            for y in _range:\n                z = complex(x, y)"],[1,":\n            for y in self.my_range(-2, 2, self._d):"],[0,"\n   "]],739,739,96,61],[[[0,".append("],[-1,"z"],[1,"complex(x,y)"],[0,")\n    \n "]],831,831,17,28]],"time":1443518924821}
{"patch":[[[[0,"elf."],[-1,"my_"],[1,"d"],[0,"rang"]],767,767,11,9]],"time":1443518922868}
{"patch":[[[[0,"  for y in self."],[-1,"d"],[1,"my_"],[0,"range(-2, 2, sel"]],755,755,33,35]],"time":1443518891204}
{"patch":[[[[0,"n self.d"],[-1,"range"],[0,"(-2, 2, "]],714,714,21,16]],"time":1443518889199}
{"patch":[[[[0,"in self."],[-1,"d"],[1,"my_range"],[0,"(-2, 2, "]],713,713,17,24]],"time":1443518887212}
{"patch":[[[[0,"    "],[-1,"for x in "],[1,"_range="],[0,"self."],[-1,"my_"],[1,"d"],[0,"rang"]],703,703,25,21],[[[0,"._d)"],[-1,":\n            for y in self.my_range(-2, 2, self._d):"],[1,"\n        for x in _range:\n            for y in _range:\n                z = complex(x, y)"],[0,"\n   "]],737,737,61,96],[[[0,"end("],[-1,"complex(x,y)"],[1,"z"],[0,")\n  "]],868,868,20,9]],"time":1443518884798}
{"patch":[[[[0,"e=self.d"],[-1,"range"],[0,"(-2, 2, "]],712,712,21,16]],"time":1443518876584}
{"patch":[[[[0,"ge=self."],[-1,"d"],[1,"my_range"],[0,"(-2, 2, "]],711,711,17,24]],"time":1443518873546}
{"patch":[[[[0,"elf."],[-1,"my_"],[1,"d"],[0,"rang"]],715,715,11,9]],"time":1443518870642}
{"patch":[[[[0," in "],[-1,"_range:\n                z = complex(x, y)"],[1,":"],[0,"\n   "]],784,784,49,9],[[[0,".append("],[-1,"z"],[1,"complex(x,y)"],[0,")\n    \n "]],824,824,17,28]],"time":1443518850856}
{"patch":[[[[0,"or y in "],[1,"_range"],[0,":\n      "]],780,780,16,22]],"time":1443518848880}
{"patch":[[[[0,"   for y in "],[-1,"_range"],[0,":\n          "]],776,776,30,24]],"time":1443518842177}
{"patch":[[[[0,"or y in "],[1,"self.my_range(-2, 2, self._d)"],[0,":\n      "]],780,780,16,45]],"time":1443518839918}
{"patch":[[[[0," in _ran"],[-1,"ge"],[0,":\n      "]],755,755,18,16]],"time":1443518837883}
{"patch":[[[[0,"or x in "],[-1,"_ran"],[0,":\n      "]],751,751,20,16]],"time":1443518835868}
{"patch":[[[[0,"or x in "],[1,"self.my_range(-2, 2, self._d)"],[0,":\n      "]],751,751,16,45]],"time":1443518833848}
{"patch":[[[[0," in "],[-1,"self.my_range(-2, 2, self._d):\n            for y in self.my_range(-2, 2, self._d):"],[1,"_range:\n            for y in _range:\n                z = complex(x, y)"],[0,"\n   "]],755,755,90,78],[[[0,"end("],[-1,"complex(x,y)"],[1,"z"],[0,")\n  "]],868,868,20,9]],"time":1443518828412}
{"patch":[[[[0,"explane(self"],[1,", d=0"],[0,"):\n        s"]],652,652,24,29]],"time":1443518707320}
{"patch":[[[[0,"    "],[-1,"r = start\n        while r <= stop"],[1,"while start <= end"],[0,":\n  "]],493,493,41,26],[[[0,"  yield "],[-1,"r"],[1,"start"],[0,"\n       "]],527,527,17,21],[[[0,"        "],[-1,"r"],[1,"start"],[0," += step"]],545,545,17,21]],"time":1443518692027}
{"patch":[[[[0,"tart <= "],[-1,"end"],[1,"stop"],[0,":\n      "]],504,504,19,20]],"time":1443518690060}
{"patch":[[[[0,"tart <= "],[-1,"stop"],[1,"end"],[0,":\n      "]],504,504,20,19]],"time":1443518681626}
{"patch":[[[[0,"    "],[-1,"while start <= end"],[1,"r = start\n        while r <= stop"],[0,":\n  "]],493,493,26,41],[[[0,"  yield "],[-1,"start"],[1,"r"],[0,"\n       "]],542,542,21,17],[[[0,"        "],[-1,"start"],[1,"r"],[0," += step"]],556,556,21,17]],"time":1443518677622}
{"patch":[[[[0,"   for y in "],[1,"y"],[0,"_range:\n    "]],781,781,24,25]],"time":1443518636190}
{"patch":[[[[0,"or x in "],[1,"x"],[0,"_range:\n"]],756,756,16,17]],"time":1443518605980}
{"patch":[[[[0,"        "],[1,"x"],[0,"_range=s"]],704,704,16,17]],"time":1443518598449}
{"patch":[[[[0,"elf._d)\n"],[1,"\n"],[0,"        "]],740,740,16,17]],"time":1443518596448}
{"patch":[[[[0,"elf._d)\n"],[1,"        y_range=self.drange(-2, 2, self._d)"],[0,"\n       "]],740,740,16,59]],"time":1443518594453}
{"patch":[[[[0,"hile r <"],[-1,"="],[0," stop:\n "]],516,516,17,16]],"time":1443518523732}
{"patch":[[[[0,"while r "],[1,"="],[0,"< stop:\n"]],515,515,16,17]],"time":1443518521772}
{"patch":[[[[0,"while r "],[-1,"="],[0,"< stop:\n"]],515,515,17,16]],"time":1443518515372}
{"patch":[[[[0,"    "],[-1,"x_range="],[1,"for x in "],[0,"self"]],707,707,16,17],[[[0,"._d)"],[-1,"\n"],[1,":\n    "],[0,"        "],[-1,"y_range="],[1,"for y in "],[0,"self."],[-1,"d"],[1,"my_"],[0,"rang"]],743,743,31,39],[[[0,"._d)"],[-1,"\n        for x in x_range:\n            for y in y_range:\n                z = complex(x, y)"],[1,":"],[0,"\n   "]],795,795,98,9],[[[0,".append("],[-1,"z"],[1,"complex(x,y)"],[0,")\n    \n "]],835,835,17,28]],"time":1443518504182}
{"patch":[[[[0,"elf."],[-1,"my_"],[1,"d"],[0,"rang"]],771,771,11,9]],"time":1443518502217}
{"patch":[[[[0,"r y in self.dran"],[-1,"ge"],[0,"(-2, 2, self._d)"]],763,763,34,32]],"time":1443518490617}
{"patch":[[[[0,"in self."],[-1,"d"],[1,"my_"],[0,"ran"],[1,"ge"],[0,"(-2, 2, "]],767,767,20,24]],"time":1443518488610}
{"patch":[[[[0,"n self.d"],[-1,"range"],[0,"(-2, 2, "]],718,718,21,16]],"time":1443518486619}
{"patch":[[[[0,"in self."],[-1,"d"],[1,"my_range"],[0,"(-2, 2, "]],717,717,17,24]],"time":1443518484674}
{"patch":[[[[0,"    "],[-1,"for x in self.my_range(-2, 2, self._d)"],[1,"x_range=self.drange(-2, 2, self._d)\n        y_range=self.drange(-2, 2, self._d)\n        for x in x_range"],[0,":\n  "]],707,707,46,112],[[[0," in "],[-1,"self.m"],[0,"y_range"],[-1,"(-2, 2, self._d):"],[1,":\n                z = complex(x, y)"],[0,"\n   "]],834,834,38,50],[[[0,"end("],[-1,"complex(x,y)"],[1,"z"],[0,")\n  "]],919,919,20,9]],"time":1443518462578}
{"patch":[[[[0,"(self, d"],[-1,"="],[1,"-"],[0,"0):\n    "]],658,658,17,17]],"time":1443518432111}
{"patch":[[[[0,"f, d"],[-1,"-0"],[1," ="],[0,"):\n "]],662,662,10,10]],"time":1443518430119}
{"patch":[[[[0,"elf,"],[-1," d ="],[0,"):\n "]],660,660,12,8]],"time":1443518428105}
{"patch":[[[[0,"ane(self"],[-1,","],[0,"):\n     "]],655,655,17,16]],"time":1443518426109}
{"patch":[[[[0,"explane(self"],[1,", d="],[0,"):\n        s"]],651,651,24,28]],"time":1443518333418}
{"patch":[[[[0,"self, d="],[1,"0"],[0,"):\n     "]],659,659,16,17]],"time":1443518331406}
{"patch":[[[[0,"elf,"],[-1," d=0"],[0,"):\n "]],660,660,12,8]],"time":1443518317512}
{"patch":[[[[0,"ane(self"],[-1,","],[0,"):\n     "]],655,655,17,16]],"time":1443518315512}
{"patch":[[[[0,"ate("],[-1,"x"],[1,"z"],[0,") for "],[-1,"x"],[0," in "]],1070,1070,16,15]],"time":1443518285196}
{"patch":[[[[0,"(z) for "],[1,"z"],[0," in self"]],1073,1073,16,17]],"time":1443518283248}
{"patch":[[[[0,"(z) for "],[-1,"z"],[1,"x"],[0," in self"]],1073,1073,17,17]],"time":1443518265744}
{"patch":[[[[0,"iterate("],[-1,"z"],[0,") for x "]],1066,1066,17,16]],"time":1443518263741}
{"patch":[[[[0,"iterate("],[1,"x"],[0,") for x "]],1066,1066,16,17]],"time":1443518261780}
{"patch":[[[[0,"    "],[-1,"self._complexplane = []"],[0,"\n   "]],670,670,31,8]],"time":1443518192972}
{"patch":[[[[0,"(self):\n"],[-1,"        \n"],[0,"        "]],658,658,25,16]],"time":1443518191017}
{"patch":[[[[0,"001\n"],[-1,"        self._complexplane=[]"],[0,"\n   "]],117,117,37,8]],"time":1443518101524}
{"patch":[[[[0,"= 0.001\n"],[-1,"\n"],[0,"        "]],113,113,17,16],[[[0,"lexplane(self):\n"],[1,"                self._complexplane=[]\n"],[0,"        x_range="]],620,620,32,70]],"time":1443518099864}
{"patch":[[[[0,"(self):\n"],[-1,"        "],[0,"        "]],628,628,24,16]],"time":1443518097552}
{"patch":[[[[0,"lexplane(self):\n"],[1,"        "],[0,"        self._co"]],620,620,32,40]],"time":1443518076802}
{"patch":[[[[0,"    "],[-1,"        self._complexplane=[]"],[0,"\n   "]],640,640,37,8]],"time":1443518075018}
{"patch":[[[[0,"(self):\n"],[-1,"        \n"],[0,"        "]],628,628,25,16]],"time":1443518072784}
{"patch":[[[[0,"= 0.001\n"],[1,"\n"],[0,"        "]],113,113,16,17]],"time":1443518068307}
{"patch":[[[[0,"= 0.001\n"],[1,"        self._complexplane=[]"],[0,"\n       "]],113,113,16,45]],"time":1443518066352}
{"patch":[[[[0,"001\n"],[-1,"        self._complexplane=[]\n"],[0,"    "]],117,117,38,8]],"time":1443518062052}
{"patch":[[[[0,"= 0.001\n"],[1,"\n"],[0,"        "]],113,113,16,17]],"time":1443518047740}
{"patch":[[[[0,"= 0.001\n"],[1,"        self._complexplane=[]"],[0,"\n       "]],113,113,16,45]],"time":1443518045688}
{"patch":[[[[0,"bject):\n"],[-1,"\n"],[0,"    def "]],16,16,17,16],[[[0,"lf._d = "],[-1,"0"],[0,".001\n   "]],106,106,17,16],[[[0,"elf."],[-1,"_complexplane=[]\n        self.set=[]\n"],[1,"set = []\n    "],[0,"\n   "]],128,128,45,21],[[[0," self.c\n"],[-1,""],[0,""],[1,"    "],[0,"\n    def"]],194,194,16,20],[[[0,"eturn 0\n    "],[1,"                "],[0,"\n    def dra"]],413,413,24,40],[[[0,"    def "],[-1,"d"],[1,"my_"],[0,"range(se"]],442,442,17,19],[[[0," start, "],[-1,"stop"],[1,"end"],[0,", step):"]],464,464,20,19],[[[0,"    "],[-1,"r = start\n        while r < stop"],[1,"while start <= end"],[0,":\n  "]],488,488,40,26],[[[0,"  yield "],[-1,"r"],[1,"start"],[0,"\n       "]],522,522,17,21],[[[0,"        "],[-1,"r"],[1,"start"],[0," += step"]],540,540,17,21],[[[0,"    "],[-1,"\n"],[0,"    "],[-1,"# Generate evenly spaced values over x and y planes"],[1,"        "],[0,"\n   "]],562,562,64,20],[[[0,"  def ge"],[-1,"t"],[1,"n"],[0,"_complex"]],581,581,17,17],[[[0,"explane(self"],[1,", d=0"],[0,"):\n        x"]],596,596,24,29],[[[0,"    "],[-1,"x_range=self.drange(-2, 2, self._d)\n        y_range="],[1,"self._complexplane = []\n        for x in "],[0,"self."],[-1,"d"],[1,"my_"],[0,"rang"]],620,620,66,57],[[[0,"._d)"],[-1,"\n        for x in x_range"],[0,":\n  "]],690,690,33,8],[[[0," in "],[1,"self.m"],[0,"y_range"],[-1,":\n                z = complex(x, y)"],[1,"(-2, 2, self._d):"],[0,"\n   "]],713,713,50,38],[[[0,".append("],[-1,"z)\n    "],[1,"complex(x,y))\n"],[0,"\n    def"]],782,782,23,30],[[[0," self.ge"],[-1,"t"],[1,"n"],[0,"_complex"]],862,862,17,17],[[[0,"plane()\n"],[1,"        #print('spacing is now ' + repr(self._d) )\n"],[0,"        "]],879,879,16,67],[[[0,"ate("],[-1,"x"],[1,"z"],[0,") for "],[-1,"x"],[1,"z"],[0," in "]],1000,1000,16,16],[[[0,"self.set"],[-1,"\n"]],1051,1051,9,8]],"time":1443518035832}
{"patch":[[[[0,"bject):\n"],[1,"\n"],[0,"    def "]],16,16,16,17],[[[0,"lf._d = "],[1,"0"],[0,".001\n   "]],107,107,16,17],[[[0,"elf."],[-1,"set = []\n    "],[1,"_complexplane=[]\n        self.set=[]\n"],[0,"\n   "]],130,130,21,45],[[[0," self.c\n"],[-1,"    "],[0,""],[1,""],[0,"\n    def"]],220,220,20,16],[[[0,"n 0\n    "],[-1,"                "],[0,"\n    def"]],439,439,32,16],[[[0,"    def "],[-1,"my_"],[1,"d"],[0,"range(se"]],448,448,19,17],[[[0," start, "],[-1,"end"],[1,"stop"],[0,", step):"]],468,468,19,20],[[[0,"    "],[-1,"while start <= end"],[1,"r = start\n        while r < stop"],[0,":\n  "]],493,493,26,40],[[[0,"  yield "],[-1,"start"],[1,"r"],[0,"\n       "]],541,541,21,17],[[[0,"        "],[-1,"start"],[1,"r"],[0," += step"]],555,555,21,17],[[[0,"tep\n    "],[1,"\n"],[0,"    "],[-1,"        "],[1,"# Generate evenly spaced values over x and y planes"],[0,"\n    def"]],569,569,28,72],[[[0,"  def ge"],[-1,"n"],[1,"t"],[0,"_complex"]],636,636,17,17],[[[0,"self"],[-1,", d=0"],[0,"):\n "]],659,659,13,8],[[[0,"    "],[-1,"self._complexplane = []\n        for x in "],[1,"x_range=self.drange(-2, 2, self._d)\n        y_range="],[0,"self."],[-1,"my_"],[1,"d"],[0,"rang"]],670,670,57,66],[[[0,"(-2, 2, self._d)"],[1,"\n        for x in x_range"],[0,":\n            fo"]],737,737,32,57],[[[0," in "],[-1,"self.m"],[0,"y_range"],[-1,"(-2, 2, self._d):"],[1,":\n                z = complex(x, y)"],[0,"\n   "]],797,797,38,50],[[[0,"end("],[-1,"complex(x,y))\n"],[1,"z)\n    "],[0,"\n   "]],882,882,22,15],[[[0," self.ge"],[-1,"n"],[1,"t"],[0,"_complex"]],951,951,17,17],[[[0,"e()\n"],[-1,"        #print('spacing is now ' + repr(self._d) )\n"],[0,"    "]],972,972,59,8],[[[0,"ate("],[-1,"z"],[1,"x"],[0,") for "],[-1,"z"],[1,"x"],[0," in "]],1038,1038,16,16],[[[0," return self.set"],[1,"\n"]],1081,1081,16,17]],"time":1443518027817}
{"patch":[[[[0,"rate(x) for "],[-1,"x"],[0," in self._co"]],1037,1037,25,24]],"time":1443517867531}
{"patch":[[[[0,"(x) for "],[1,"z"],[0," in self"]],1041,1041,16,17]],"time":1443517865533}
{"patch":[[[[0,"iterate("],[-1,"x"],[0,") for z "]],1034,1034,17,16]],"time":1443517863530}
{"patch":[[[[0,"iterate("],[1,"z"],[0,") for z "]],1034,1034,16,17]],"time":1443517860414}
{"patch":[[[[0,"xplane]\n"],[1,"\n"],[0,"        "]],1066,1066,16,17]],"time":1443517858412}
{"patch":[[[[0,"xplane]\n"],[1,"        self.set=[self.iterate(a) for a in self._complexplane]"],[0,"\n       "]],1066,1066,16,78]],"time":1443517856449}
{"patch":[[[[0,"    "],[-1,"self.set=[self.iterate(a) for a in self._complexplane]"],[0,"\n   "]],1078,1078,62,8]],"time":1443517829240}
{"patch":[[[[0,"xplane]\n"],[-1,"        \n"],[0,"        "]],1066,1066,25,16]],"time":1443517826988}
{"patch":[[[[0,"erate(z)"],[-1," "],[0,"for z in"]],1036,1036,17,16]],"time":1443517807848}
{"patch":[[[[0,"erate(z)"],[1," "],[0,"for z in"]],1036,1036,16,17]],"time":1443517805844}
{"patch":[[[[0,"lexplane"],[-1,"]"],[0,"\n       "]],1064,1064,17,16]],"time":1443517779468}
{"patch":[[[[0,"f.set = "],[-1,"["],[0,"self.ite"]],1020,1020,17,16]],"time":1443517777504}
{"patch":[[[[0,"f.set = "],[1,"set"],[0,"self.ite"]],1020,1020,16,19]],"time":1443517763740}
{"patch":[[[[0,"et = set"],[1,"("],[0,"self.ite"]],1023,1023,16,17]],"time":1443517761768}
{"patch":[[[[0,"lexplane"],[1,"()"],[0,"\n       "]],1067,1067,16,18]],"time":1443517758055}
{"patch":[[[[0,"._complexplane()"],[1,")"],[0,"\n        return "]],1061,1061,32,33]],"time":1443517756092}
{"patch":[[[[0,"explane("],[1,"_d"],[0,"))\n     "]],1068,1068,16,18]],"time":1443517743802}
{"patch":[[[[0,"ane(_d))"],[1,")"],[0,"\n       "]],1072,1072,16,17]],"time":1443517741804}
{"patch":[[[[0,"or z in self"],[-1,"."],[0,"_complexplan"]],1049,1049,25,24]],"time":1443517739372}
{"patch":[[[[0," in self"],[1,"("],[0,"_complex"]],1053,1053,16,17]],"time":1443517737583}
{"patch":[[[[0,"or z in "],[-1,"self"],[0,"(_comple"]],1049,1049,20,16]],"time":1443517735405}
{"patch":[[[[0,"for "],[-1,"z in "],[0,"(_co"]],1048,1048,13,8]],"time":1443517731365}
{"patch":[[[[0,"rate(z) "],[-1,"for "],[1,"in"],[0,"(_comple"]],1040,1040,20,18]],"time":1443517729366}
{"patch":[[[[0,"rate(z) "],[-1,"in"],[0,"(_comple"]],1040,1040,18,16]],"time":1443517727364}
{"patch":[[[[0,"ate("],[-1,"z) "],[1,")"],[0,"(_co"]],1041,1041,11,9]],"time":1443517725356}
{"patch":[[[[0,"ate("],[-1,")("],[0,"_com"]],1041,1041,10,8]],"time":1443517723352}
{"patch":[[[[0," = set(s"],[-1,"elf."],[0,"iterate("]],1025,1025,20,16]],"time":1443517719356}
{"patch":[[[[0,"t = set("],[-1,"s"],[0,"iterate("]],1024,1024,17,16]],"time":1443517717340}
{"patch":[[[[0," return "],[-1,"self.set"],[0,"\n"]],1067,1067,17,9]],"time":1443517603236}
{"patch":[[[[0,"  return"],[-1," "],[0,"\n"]],1066,1066,10,9]],"time":1443517598436}
{"patch":[[[[0,"        "],[-1,"return"],[0,"\n"]],1060,1060,15,9]],"time":1443517596437}
{"patch":[[[[0,"e(_d)))\n"],[-1,"        \n"]],1052,1052,17,8]],"time":1443517594470}
{"patch":[[[[0,"       s"],[-1,"elf.set"],[0," = set(i"]],1010,1010,23,16]],"time":1443517582883}
{"patch":[[[[0,"        "],[-1,"s"],[1,"julia_set"],[0," = set(i"]],1009,1009,17,25]],"time":1443517580884}
{"patch":[[[[0,"drange(s"],[-1,"elf, "],[0,"start, s"]],456,456,21,16]],"time":1443517483909}
{"patch":[[[[0," drange("],[-1,"s"],[0,"start, s"]],455,455,17,16]],"time":1443517481912}
{"patch":[[[[0,"       y_range=s"],[-1,"elf."],[0,"drange(-2, 2, se"]],705,705,36,32]],"time":1443517449912}
{"patch":[[[[0,"y_range="],[-1,"s"],[0,"drange(-"]],712,712,17,16]],"time":1443517447921}
{"patch":[[[[0,"_range=s"],[-1,"elf."],[0,"drange(-"]],669,669,20,16]],"time":1443517443617}
{"patch":[[[[0,"x_range="],[-1,"s"],[0,"drange(-"]],668,668,17,16]],"time":1443517441656}
{"patch":[[[[0,"ile "],[-1,"True:\n            z = self.juliamap(z)"],[1,"(abs(z) <= 2 or m < self.n):"],[0,"\n   "]],279,279,46,36],[[[0,"      m "],[-1,"+"],[0,"="],[1,"+ "],[0,"1\n      "]],318,318,18,19],[[[0," if "],[1,"("],[0,"abs(z)"],[-1,">2"],[1," > 2)"],[0,":\n  "]],342,342,16,20],[[[0,"lif "],[-1,"m>="],[1,"(m > "],[0,"self.n"],[1,")"],[0,":\n  "]],398,398,17,20]],"time":1443517371498}
{"patch":[[[[0,"    "],[-1,"julia_"],[1,"self."],[0,"set = "],[1,"["],[0,"se"],[-1,"t("],[1,"lf."],[0,"iterate("],[-1,"_complexplane(_d)))"],[1,"z) for z in self._complexplane]\n        return self.set"],[0,"\n"]],995,995,48,85]],"time":1443517354690}
{"patch":[[[[0,"  def ge"],[-1,"t"],[1,"n"],[0,"_complex"]],628,628,17,17],[[[0,"explane(self"],[1,", d=0"],[0,"):\n        x"]],643,643,24,29],[[[0,"    "],[-1,"x_range=drange(-2, 2, self._d)\n        y_range=drange(-2, 2, self._d)\n        for x in x_range"],[1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[0,":\n  "]],667,667,102,78],[[[0," in "],[1,"self.m"],[0,"y_range"],[-1,":\n                z = complex(x, y)"],[1,"(-2, 2, self._d):"],[0,"\n   "]],760,760,50,38],[[[0,"end("],[-1,"z)\n    "],[1,"complex(x,y))\n"],[0,"\n   "]],833,833,15,22],[[[0," self.ge"],[-1,"t"],[1,"n"],[0,"_complex"]],909,909,17,17],[[[0,"plane()\n"],[1,"        #print('spacing is now ' + repr(self._d) )\n"],[0,"        "]],926,926,16,67],[[[0,"self.set"],[-1,"\n"],[0,""],[1,""]],1098,1098,9,8]],"time":1443517352691}
{"patch":[[[[0,"  def ge"],[-1,"n"],[1,"t"],[0,"_complex"]],628,628,17,17],[[[0,"self"],[-1,", d=0"],[0,"):\n "]],651,651,13,8],[[[0,"    "],[-1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[1,"x_range=drange(-2, 2, self._d)\n        y_range=drange(-2, 2, self._d)\n        for x in x_range"],[0,":\n  "]],662,662,78,102],[[[0," in "],[-1,"self.m"],[0,"y_range"],[-1,"(-2, 2, self._d):"],[1,":\n                z = complex(x, y)"],[0,"\n   "]],779,779,38,50],[[[0,"end("],[-1,"complex(x,y))\n"],[1,"z)\n    "],[0,"\n   "]],864,864,22,15],[[[0," self.ge"],[-1,"n"],[1,"t"],[0,"_complex"]],933,933,17,17],[[[0,"e()\n"],[-1,"        #print('spacing is now ' + repr(self._d) )\n"],[0,"    "]],954,954,59,8],[[[0," return self.set"],[-1,""],[0,""],[1,"\n"]],1063,1063,16,17]],"time":1443517340566}
{"patch":[[[[0,"  def ge"],[-1,"t"],[1,"n"],[0,"_complex"]],628,628,17,17],[[[0,"explane(self"],[1,", d=0"],[0,"):\n        x"]],643,643,24,29],[[[0,"    "],[-1,"x_range=drange(-2, 2, self._d)\n        y_range=drange(-2, 2, self._d)\n        for x in x_range"],[1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[0,":\n  "]],667,667,102,78],[[[0," in "],[1,"self.m"],[0,"y_range"],[-1,":\n                z = complex(x, y)"],[1,"(-2, 2, self._d):"],[0,"\n   "]],760,760,50,38],[[[0,".append("],[-1,"z"],[1,"complex(x,y)"],[0,")\n    \n "]],829,829,17,28]],"time":1443517331273}
{"patch":[[[[0,"  def ge"],[-1,"n"],[1,"t"],[0,"_complex"]],628,628,17,17],[[[0,"self"],[-1,", d=0"],[0,"):\n "]],651,651,13,8],[[[0,"    "],[-1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[1,"x_range=drange(-2, 2, self._d)\n        y_range=drange(-2, 2, self._d)\n        for x in x_range"],[0,":\n  "]],662,662,78,102],[[[0," in "],[-1,"self.m"],[0,"y_range"],[-1,"(-2, 2, self._d):"],[1,":\n                z = complex(x, y)"],[0,"\n   "]],779,779,38,50],[[[0,"end("],[-1,"complex(x,y)"],[1,"z"],[0,")\n  "]],864,864,20,9]],"time":1443517329270}
{"patch":[[[[0,"   \n"],[-1,"    def generate(self):\n        self.set = [self.iterate(z) for z in self._complexplane]\n        return self.set"],[0,"\n"]],963,963,117,5]],"time":1443517307864}
{"patch":[[[[0,"        "],[1,"\n    def generate(self):"],[0,"\n\n"]],958,958,10,34]],"time":1443517305860}
{"patch":[[[[0,"(self):\n"],[1,"        julia_set = set(iterate(_complexplane(_d)))"],[0,"\n"]],983,983,9,60]],"time":1443517303864}
{"patch":[[[[0,"explane("],[1,"_"],[0,")\n      "]],948,948,16,17]],"time":1443517282826}
{"patch":[[[[0,"xplane(_"],[1,"d"],[0,")\n      "]],949,949,16,17]],"time":1443517280826}
{"patch":[[[[0,"explane(self"],[1,", d"],[0,"):\n        x"]],643,643,24,27]],"time":1443517266671}
{"patch":[[[[0,"explane("],[1,"self"],[0,"_d)\n    "]],951,951,16,20]],"time":1443517264633}
{"patch":[[[[0,"ane(self"],[1,"."],[0,"_d)\n    "]],955,955,16,17]],"time":1443517262627}
{"patch":[[[[0,"_d)\n"],[-1,"        \n    def generate(self):\n        julia_set = set(iterate(_complexplane(_d)))\n"]],964,964,89,4]],"time":1443517225424}
{"patch":[[[[0,"xplane(self._d)\n"],[1,"        \n"]],952,952,16,25]],"time":1443517213579}
{"patch":[[[[0,"d)\n        \n"],[1,"    def generate(self):\n\n"]],965,965,12,37]],"time":1443517211576}
{"patch":[[[[0,"(self):\n"],[1,"        julia_set = set(iterate(_complexplane(_d)))"],[0,"\n"]],993,993,9,60]],"time":1443517209577}
{"patch":[[[[0,"d)\n        \n"],[-1,"    "],[0,"def generate"]],965,965,28,24],[[[0,"    "],[-1,"julia_"],[1,"self."],[0,"set = "],[1,"["],[0,"se"],[-1,"t("],[1,"lf."],[0,"iterate("],[-1,"_complexplane(_d)))\n"],[1,"z) for z in self._complexplane]\n        return self.set"]],1001,1001,48,84]],"time":1443517180329}
{"patch":[[[[0,"       \n"],[1,"    "],[0,"def gene"]],969,969,16,20]],"time":1443517178326}
{"patch":[[[[0,"d)\n        \n"],[-1,"    "],[0,"def generate"]],965,965,28,24]],"time":1443517166246}
{"patch":[[[[0,"       \n"],[1,"    "],[0,"def gene"]],969,969,16,20],[[[0,"    "],[-1,"self."],[1,"julia_"],[0,"set = "],[-1,"["],[0,"se"],[-1,"lf."],[1,"t("],[0,"iterate("],[-1,"z) for z in self._complexplane]\n        return self.set"],[1,"_complexplane(_d)))\n"]],1005,1005,84,48]],"time":1443517163461}
{"patch":[[[[0,"xplane(s"],[-1,"elf."],[0,"_d)\n    "]],952,952,20,16]],"time":1443517027144}
{"patch":[[[[0,"explane("],[-1,"s"],[0,"_d)\n    "]],951,951,17,16]],"time":1443517025141}
{"patch":[[[[0,"   self."],[-1,"get"],[0,"_complex"]],934,934,19,16]],"time":1443516999931}
{"patch":[[[[0,"_d = d\n        s"],[-1,"elf."],[0,"_complexplane(_d"]],922,922,36,32]],"time":1443516998030}
{"patch":[[[[0,"        "],[-1,"s"],[0,"_complex"]],929,929,17,16]],"time":1443516995919}
{"patch":[[[[0,"lf._d = "],[1,"_"],[0,"d\n      "]],919,919,16,17]],"time":1443516985660}
{"patch":[[[[0,"acing(self, "],[1,"_"],[0,"d):\n        "]],893,893,24,25]],"time":1443516983657}
{"patch":[[[[0,"    self"],[-1,"._complexplane"],[1,"_"],[0,".append("]],841,841,30,17]],"time":1443516961881}
{"patch":[[[[0,"   s"],[-1,"elf_"],[0,".app"]],842,842,12,8]],"time":1443516959879}
{"patch":[[[[0,"        "],[-1,"s"],[1,"z_plane"],[0,".append("]],837,837,17,23]],"time":1443516957874}
{"patch":[[[[0,"pend(z)\n"],[1,"\n"],[0,"    \n   "]],855,855,16,17]],"time":1443516939030}
{"patch":[[[[0,"pend(z)\n"],[1,"        return z_plane"],[0,"\n    \n  "]],855,855,16,38]],"time":1443516937060}
{"patch":[[[[0,"-2, 2, self._d)\n"],[1,"\n"],[0,"        for x in"]],723,723,32,33]],"time":1443516919397}
{"patch":[[[[0,"elf._d)\n"],[1,"        z_plane = []"],[0,"\n       "]],731,731,16,36]],"time":1443516917395}
{"patch":[[[[0,"drange(-2, 2, se"],[-1,"lf."],[0,"_d)\n        z_pl"]],716,716,35,32]],"time":1443516907312}
{"patch":[[[[0," 2, self"],[-1,"."],[0,"_d)\n    "]],687,687,17,16],[[[0,"(-2, 2, "],[-1,"se"],[0,"_d)\n    "]],721,721,18,16]],"time":1443516905312}
{"patch":[[[[0,"-2, 2, s"],[-1,"elf"],[0,"_d)\n    "]],684,684,19,16]],"time":1443516903317}
{"patch":[[[[0,"(-2, 2, "],[-1,"s"],[0,"_d)\n    "]],683,683,17,16]],"time":1443516901308}
{"patch":[[[[0,"e(self, "],[1,"_"],[0,"d):\n    "]],649,649,16,17]],"time":1443516855618}
{"patch":[[[[0,"plane(self, "],[-1,"_"],[0,"d):\n        "]],645,645,25,24]],"time":1443516853614}
{"patch":[[[[0,"e(self, "],[1,"_"],[0,"d):\n    "]],649,649,16,17]],"time":1443516841968}
{"patch":[[[[0,"def "],[-1,"get_"],[0,"comp"]],630,630,12,8]],"time":1443516810147}
{"patch":[[[[0,"    def "],[1,"_"],[0,"complexp"]],626,626,16,17]],"time":1443516808145}
{"patch":[[[[0,"bject):\n"],[-1,"\n"],[0,"    def "]],16,16,17,16],[[[0,"lf._d = "],[-1,"0"],[0,".001\n   "]],106,106,17,16],[[[0,"elf."],[-1,"_complexplane=[]\n        self.set=[]\n"],[1,"set = []\n    "],[0,"\n   "]],128,128,45,21],[[[0," self.c\n"],[-1,""],[0,""],[1,"    "],[0,"\n    def"]],194,194,16,20],[[[0,"ile "],[-1,"(abs(z) <= 2 or m < self.n):"],[1,"True:\n            z = self.juliamap(z)"],[0,"\n   "]],257,257,36,46],[[[0,"  m "],[1,"+"],[0,"="],[-1,"+ "],[0,"1\n  "]],310,310,11,10],[[[0," if "],[-1,"("],[0,"abs(z)"],[-1," > 2)"],[1,">2"],[0,":\n  "]],329,329,20,16],[[[0,"lif "],[-1,"(m > "],[1,"m>="],[0,"self.n"],[-1,")"],[0,":\n  "]],381,381,20,17],[[[0,"eturn 0\n    "],[1,"                "],[0,"\n    def dra"]],413,413,24,40],[[[0,"def "],[-1,"d"],[1,"my_"],[0,"range("],[1,"self, "],[0,"start, "],[-1,"stop"],[1,"end"],[0,", st"]],446,446,26,33],[[[0,"    "],[-1,"r = start\n        while r < stop"],[1,"while start <= end"],[0,":\n  "]],488,488,40,26],[[[0,"  yield "],[-1,"r"],[1,"start"],[0,"\n       "]],522,522,17,21],[[[0,"        "],[-1,"r"],[1,"start"],[0," += step"]],540,540,17,21],[[[0,"    "],[-1,"\n"],[0,"    "],[-1,"# Generate evenly spaced values over x and y planes"],[1,"        "],[0,"\n   "]],562,562,64,20],[[[0,"    def "],[1,"gen"],[0,"_complex"]],579,579,16,19],[[[0,"plane(self, "],[-1,"_"],[0,"d"],[1,"=0"],[0,"):\n        x"]],598,598,26,27],[[[0,"    "],[-1,"x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n        z_plane = []\n        for x in x_range"],[1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[0,":\n  "]],620,620,113,78],[[[0,"or y in "],[1,"self.m"],[0,"y_range"],[1,"(-2, 2, self._d)"],[0,":\n      "]],709,709,23,45],[[[0,"    "],[-1,"z = "],[1,"self._"],[0,"complex"],[-1,"(x, y)\n                z_plane.append(z)\n        return z_plane\n    "],[1,"plane.append(complex(x,y))\n"],[0,"\n   "]],760,760,87,48],[[[0,"g(self, "],[-1,"_"],[0,"d):\n    "]],823,823,17,16],[[[0,"lf._d = "],[-1,"_"],[0,"d\n      "]],845,845,17,16],[[[0,"        "],[1,"self.gen"],[0,"_complex"]],855,855,16,24],[[[0,"explane("],[-1,"_d"],[1,")\n        #print('spacing is now ' + repr(self._d) "],[0,")\n      "]],877,877,18,67],[[[0,"    "],[-1,"julia_"],[1,"self."],[0,"set = "],[1,"["],[0,"se"],[-1,"t("],[1,"lf."],[0,"iterate("],[-1,"_complexplane(_d)))\n"],[1,"z) for z in self._complexplane]\n        return self.set"]],975,975,48,84]],"time":1443516778031}
{"patch":[[[[0,"bject):\n"],[1,"\n"],[0,"    def "]],16,16,16,17],[[[0,"lf._d = "],[1,"0"],[0,".001\n   "]],107,107,16,17],[[[0,"elf."],[-1,"set = []\n    "],[1,"_complexplane=[]\n        self.set=[]\n"],[0,"\n   "]],130,130,21,45],[[[0," self.c\n"],[-1,"    "],[0,""],[1,""],[0,"\n    def"]],220,220,20,16],[[[0,"ile "],[-1,"True:\n            z = self.juliamap(z)"],[1,"(abs(z) <= 2 or m < self.n):"],[0,"\n   "]],279,279,46,36],[[[0,"      m "],[-1,"+"],[0,"="],[1,"+ "],[0,"1\n      "]],318,318,18,19],[[[0," if "],[1,"("],[0,"abs(z)"],[-1,">2"],[1," > 2)"],[0,":\n  "]],342,342,16,20],[[[0,"lif "],[-1,"m>="],[1,"(m > "],[0,"self.n"],[1,")"],[0,":\n  "]],398,398,17,20],[[[0,"n 0\n    "],[-1,"                "],[0,"\n    def"]],437,437,32,16],[[[0,"def "],[-1,"my_"],[1,"d"],[0,"range("],[-1,"self, "],[0,"start, "],[-1,"end"],[1,"stop"],[0,", st"]],450,450,33,26],[[[0,"    "],[-1,"while start <= end"],[1,"r = start\n        while r < stop"],[0,":\n  "]],485,485,26,40],[[[0,"  yield "],[-1,"start"],[1,"r"],[0,"\n       "]],533,533,21,17],[[[0,"        "],[-1,"start"],[1,"r"],[0," += step"]],547,547,21,17],[[[0,"tep\n    "],[1,"\n"],[0,"    "],[-1,"        "],[1,"# Generate evenly spaced values over x and y planes"],[0,"\n    def"]],561,561,28,72],[[[0,"    def "],[-1,"gen"],[0,"_complex"]],626,626,19,16],[[[0,"lf, "],[1,"_"],[0,"d"],[-1,"=0"],[0,"):\n "]],650,650,11,10],[[[0,"    "],[-1,"self._complexplane = []\n        for x in self.my_range(-2, 2, self._d)"],[1,"x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n        z_plane = []\n        for x in x_range"],[0,":\n  "]],663,663,78,113],[[[0," in "],[-1,"self.m"],[0,"y_range"],[-1,"(-2, 2, self._d):\n                self._complexplane.append(complex(x,y))\n"],[1,":\n                z = complex(x, y)\n                z_plane.append(z)\n        return z_plane\n    "],[0,"\n   "]],791,791,95,112],[[[0,"g(self, "],[1,"_"],[0,"d):\n    "]],918,918,16,17],[[[0,"lf._d = "],[1,"_"],[0,"d\n      "]],941,941,16,17],[[[0,"    "],[-1,"self.gen"],[0,"_com"]],956,956,16,8],[[[0,"ane("],[-1,")\n        #print('spacing is now ' + repr(self._d) "],[1,"_d"],[0,")\n  "]],970,970,59,10],[[[0,"    "],[-1,"self."],[1,"julia_"],[0,"set = "],[-1,"["],[0,"se"],[-1,"lf."],[1,"t("],[0,"iterate("],[-1,"z) for z in self._complexplane]\n        return self.set"],[1,"_complexplane(_d)))\n"]],1015,1015,84,48]],"time":1443516767955}
{"patch":[[[[0," self.c\n"],[1,"   "],[0,"\n    def"]],220,220,16,19]],"time":1443516658560}
{"patch":[[[[0,"lf.c\n   "],[1," "],[0,"\n    def"]],223,223,16,17]],"time":1443516656552}
{"patch":[[[[0,".set=[]\n"],[1,"       "],[0,"\n    def"]],163,163,16,23]],"time":1443516654258}
{"patch":[[[[0,"t=[]\n       "],[1," "],[0,"\n    def jul"]],166,166,24,25]],"time":1443516652252}
{"patch":[[[[0,"Set("],[-1,"object):\n"],[1,"):\n    "],[0,"\n   "]],11,11,17,15],[[[0," n=100):"],[1," # This is the data for the class - "],[0,"\n       "]],48,48,16,52],[[[0,"lf.c = c"],[1,"     "],[0,"\n       "]],103,103,16,21],[[[0,"elf."],[-1,"_complexplane=[]\n        self.set=[]\n        \n    def juliamap(self, z):"],[1,"set = [ ]\n    \n    def juliamap(self, z) : # This is the method for the class "],[0,"\n   "]],169,169,80,86],[[[0," return "],[1,"("],[0,"z**2 + s"]],259,259,16,17],[[[0,"+ self.c"],[1,")"],[0,"\n    \n"],[1,"\n"],[0,"    def "],[1," "],[0,"iterate("]],273,273,30,33],[[[0,"elf, z):"],[1,"  # This is the method for the class"],[0,"\n       "]],307,307,16,52],[[[0,"z) <"],[-1,"= 2"],[1," 3)"],[0," or "],[1,"("],[0,"m < "]],385,385,15,16],[[[0,"    "],[-1,"m =+"],[1,"z = self.juliamap(z)\n            m +="],[0," 1\n "]],418,418,12,45],[[[0,"     if "],[-1,"("],[0,"abs(z) >"]],469,469,17,16],[[[0,"s(z) > 2"],[-1,")"],[1," "],[0,":\n      "]],479,479,17,17],[[[0,"  return"],[-1," m"],[1,"(m)"],[0,"\n       "]],504,504,18,19],[[[0,"lif "],[-1,"("],[0,"m >"],[1,"="],[0," self.n"],[-1,")"],[1," "],[0,":\n  "]],529,529,20,20],[[[0,"turn"],[-1," 0\n    \n    def drange(start, stop, step):\n        r = start\n        while r < stop:\n            yield r\n            r += step\n"],[1,"(0)\n\n            \n    def create_complexplane(self,d) :\n        list1 = [ ]\n        i = -2\n        j = -2\n        while (i <= 2 and j <= 2-d):\n            j = round(i+d,3)\n   "],[0,"    "],[-1,"\n"],[0,"    "],[-1,"# Generate evenly spaced values over x and y planes\n    def _complexplane(self, _d):\n        x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n"],[1," complexnumber = complex(i,j)\n            list1.append(complexnumber)\n            i=j\n        return list1  "],[0,"  "],[1,"\n"],[0,"      "],[-1,"z_plane = []\n"],[1,"  "],[0,"    "],[1,"\n"],[0,"    "],[-1,"for x in x_range:\n            for y in y_range:\n                z = complex(x, y"],[1,"def set_spacing(self, d) : # This is the method for the class \n        self._d = d\n        self._complexplane = self.create_complexplane(d"],[0,")\n  "]],565,565,406,457],[[[0,"    "],[1,"#"],[0,"  "],[-1,"    z_plane.append(z)"],[1,"print self._complexplane  # to troubleshoot the code"],[0,"\n   "],[1,"\n"],[0,"    "],[-1," return z_plane"],[1,"def generate(self) :"],[0,"\n    "],[-1,"\n"],[0,"    "],[-1,"def "],[1,"self."],[0,"set_"]],1026,1026,68,106],[[[0,"self"],[-1,", "],[1,"."],[0,"_d)"],[-1,":"],[0,"\n   "]],1140,1140,14,12],[[[0,"    "],[-1,"self._d = _d\n        "],[1,"for complex_number in self."],[0,"_com"]],1153,1153,29,35],[[[0,"lexplane"],[-1,"(_d)"],[1,":"],[0,"\n       "]],1189,1189,20,17],[[[0,"    "],[-1,"\n"],[0,"    "],[-1,"def generate(self):\n        julia_set = set("],[1," self.set.append(self."],[0,"iterate("],[-1,"_"],[0,"complex"],[-1,"plane(_d)))\n"],[1,"_number))\n        return self.set"]],1203,1203,81,78]],"time":1443516615694}
{"patch":[[[[0,"uliaSet("],[-1,"):\n    "],[1,"object):\n"],[0,"\n    def"]],7,7,23,25],[[[0,"00):"],[-1," # This is the data for the class - "],[0,"\n   "]],54,54,44,8],[[[0,"lf.c = c"],[-1,"     "],[0,"\n       "]],69,69,21,16],[[[0,"elf."],[-1,"set = [ ]\n    \n    def juliamap(self, z) : # This is the method for the class "],[1,"_complexplane=[]\n        self.set=[]\n        \n    def juliamap(self, z):"],[0,"\n   "]],130,130,86,80],[[[0," return "],[-1,"("],[0,"z**2 + s"]],214,214,17,16],[[[0,"lf.c"],[-1,")"],[0,"\n    \n"],[-1,"\n"],[0,"    def "],[-1," "],[0,"iter"]],231,231,25,22],[[[0," z):"],[-1,"  # This is the method for the class"],[0,"\n   "]],262,262,44,8],[[[0,"z) <"],[-1," 3)"],[1,"= 2"],[0," or "],[-1,"("],[0,"m < "]],300,300,16,15],[[[0,"    "],[-1,"z = self.juliamap(z)\n            m +="],[1,"m =+"],[0," 1\n "]],332,332,45,12],[[[0,"     if "],[1,"("],[0,"abs(z) >"]],350,350,16,17],[[[0,"s(z) > 2"],[-1," "],[1,")"],[0,":\n      "]],361,361,17,17],[[[0,"turn"],[-1,"(m)"],[1," m"],[0,"\n   "]],390,390,11,10],[[[0,"lif "],[1,"("],[0,"m >"],[-1,"="],[0," self.n"],[-1," "],[1,")"],[0,":\n  "]],410,410,20,20],[[[0,"turn"],[-1,"(0)\n\n            \n    def create_complexplane(self,d) :\n        list1 = [ ]\n        i = -2\n        j = -2\n        while (i <= 2 and j <= 2-d):\n            j = round(i+d,3)"],[1," 0\n    \n    def drange(start, stop, step):\n        r = start\n        while r < stop:\n            yield r\n            r += step"],[0,"\n    "],[1,"\n"],[0,"    "],[-1,"    complexnumber = complex(i,j)\n            list1.append(complexnumber)\n            i=j\n        return list1 "],[1,"# Generate evenly spaced values over x and y planes\n    def _complexplane(self, _d):\n        x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n"],[0,"   "],[-1,"\n"],[0,"     "],[-1,"   "],[1,"z_plane = []\n"],[0,"    "],[-1,"\n"],[0,"    "],[-1,"def set_spacing(self, d) : # This is the method for the class \n        self._d = d\n        self._complexplane = self.create_complexplane(d"],[1,"for x in x_range:\n            for y in y_range:\n                z = complex(x, y"],[0,")\n  "]],446,446,457,406],[[[0,"    "],[-1,"#"],[0,"  "],[-1,"print self._complexplane  # to troubleshoot the code"],[1,"    z_plane.append(z)"],[0,"\n   "],[-1,"\n"],[0,"    "],[-1,"def generate(self) :"],[1," return z_plane"],[0,"\n    "],[1,"\n"],[0,"    "],[-1,"self."],[1,"def "],[0,"set_"]],856,856,106,68],[[[0,"self"],[-1,"."],[1,", "],[0,"_d)"],[1,":"],[0,"\n   "]],932,932,12,14],[[[0,"    "],[-1,"for complex_number in self."],[1,"self._d = _d\n        "],[0,"_com"]],947,947,35,29],[[[0,"lexplane"],[-1,":"],[1,"(_d)"],[0,"\n       "]],977,977,17,20],[[[0,"    "],[1,"\n"],[0,"    "],[-1," self.set.append(self."],[1,"def generate(self):\n        julia_set = set("],[0,"iterate("],[1,"_"],[0,"complex"],[-1,"_number))\n        return self.set"],[1,"plane(_d)))\n"]],994,994,78,81]],"time":1443516591318}
{"patch":[[[[0,"+= step\n    "],[1,"     "],[0,"\n    # Gener"]],569,569,24,29]],"time":1443516541772}
{"patch":[[[[0,"tep\n"],[-1,"         \n"],[0,"    "]],573,573,18,8]],"time":1443516539764}
{"patch":[[[[0," planes\n"],[1,"\n"],[0,"    def "]],625,625,16,17]],"time":1443516537760}
{"patch":[[[[0," planes\n"],[1,"    _d = 0.001"],[0,"\n    def"]],625,625,16,30]],"time":1443516535764}
{"patch":[[[[0,"self.set=[]\n"],[1,"\n"],[0,"        \n   "]],159,159,24,25]],"time":1443516503929}
{"patch":[[[[0,".set=[]\n"],[1,"    \n    def setup(self):\n        \"\"\"Setup fixture is run before every test method separately\"\"\"\n        self.c = rand_range()\n        self.n = randint(2,100)\n        self.j = JuliaSet(self.c, self.n)"],[0,"\n       "]],163,163,16,216]],"time":1443516501925}
{"patch":[[[[0,"001\n        "],[1,"       "],[0,"self._comple"]],117,117,24,31]],"time":1443516492281}
{"patch":[[[[0,"            "],[1," "],[0,"self._comple"]],124,124,24,25]],"time":1443516490273}
{"patch":[[[[0,"    "],[-1,"        self._complexplane=[]\n        self.set=[]"],[0,"\n   "]],125,125,57,8]],"time":1443516487114}
{"patch":[[[[0,"= 0.001\n"],[-1,"        \n"],[0,"    \n   "]],113,113,25,16]],"time":1443516481909}
{"patch":[[[[0,"f, c, n="],[-1,"100"],[0,"):\n     "]],45,45,19,16]],"time":1443516473170}
{"patch":[[[[0,"lf, c, n"],[-1,"="],[0,"):\n     "]],44,44,17,16]],"time":1443516471168}
{"patch":[[[[0,"bject):\n"],[1,"    \n\n"],[0,"\n    def"]],16,16,16,22]],"time":1443516456931}
{"patch":[[[[0,"):\n    \n"],[1,"    def rand_range():\n        \"\"\"Return a random complex number bounded by real and imaginary axes [-2, 2]\"\"\"\n"],[0,"\n\n    de"]],21,21,16,126]],"time":1443516454925}
{"patch":[[[[0,", 2]\"\"\"\n"],[1,"        return (uniform(-2,2) + uniform(-2,2)*1j)"],[0,"\n\n    de"]],131,131,16,65]],"time":1443516452918}
{"patch":[[[[0,",2)*1j)\n"],[1,"    "],[0,"\n    def"]],181,181,16,20]],"time":1443516450288}
{"patch":[[[[0,"t):\n"],[-1,"    \n    def rand_range():\n        \"\"\"Return a random complex number bounded by real and imaginary axes [-2, 2]\"\"\"\n        return (uniform(-2,2) + uniform(-2,2)*1j)\n    "],[0,"\n   "]],20,20,177,8],[[[0,"elf,"],[-1," "],[0,"c,"],[-1," "],[0,"n"],[1,"=100"],[0,"):\n "]],43,43,13,15],[[[0,"    "],[-1,"\n"],[0,"    "],[-1,"def setup(self):\n        \"\"\"Setup fixture is run before every test method separately\"\"\"\n        self.c = rand_range()\n        self.n = randint(2,100)\n        self.j = JuliaSet(self.c, self.n)\n        "],[1,"self._complexplane=[]\n        self.set=[]\n"],[0,"\n   "]],119,119,213,54],[[[0,"liamap(self,"],[-1," "],[0,"z):\n        "]],180,180,25,24],[[[0," self.c\n"],[-1,"    "],[0,"\n    def"]],217,217,20,16],[[[0,"te(self,"],[-1," "],[0,"z):\n    "]],239,239,17,16],[[[0,"       m"],[-1," = "],[1,"="],[0,"0\n      "]],252,252,19,17],[[[0,"ile "],[-1,"(abs(z) <= 2 or m < self.n):"],[1,"True:\n            z=self.juliamap(z)"],[0,"\n   "]],273,273,36,44],[[[0,"   m"],[-1," =+ "],[1,"=m+"],[0,"1\n  "]],323,323,12,11],[[[0," if "],[-1,"("],[0,"abs(z)"],[-1," > 2)"],[1,">2"],[0,":\n  "]],343,343,20,16],[[[0,"    "],[-1,"el"],[0,"if "],[-1,"(m > "],[1,"m>="],[0,"self.n"],[-1,")"],[0,":\n  "]],390,390,25,20],[[[0,"eturn 0\n"],[-1,"    "],[0,"\n    def"]],425,425,20,16],[[[0,"def "],[-1,"drange(start, stop, step):\n        r = start\n        while r < stop:\n            yield r\n            r += step\n    # Generate evenly spaced values over x and y planes\n    _d = 0.001\n    def _complexplane(self, _d):\n        x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n        z_plane = []\n        for x in x_range:\n           "],[1,"set_spacing(self,d):\n        self._d=d\n        self._complexplane=[complex(x,y) for x in range(-2*int(1/self._d),2*int(1/self._d),1)"],[0," for"]],438,438,349,140],[[[0," in "],[-1,"y_"],[0,"range"],[-1,":\n                z = complex(x, y)\n                z_plane.append(z)\n        return z_plane\n    \n    def set_spacing("],[1,"(-2*int(1/"],[0,"self"],[-1,", _d):\n        self._d = _d\n        _complexplane(_d)\n        \n    def generate(self):\n        julia_set = set(iterate(_complexplane(_d)))\n"],[1,"._d),2*int(1/self._d),1)]\n\n    def generate(self):\n        self.set=[self.iterate(a) for a in self._complexplane]\n        return self.set"]],580,580,272,160]],"time":1443516445795}
{"patch":[[[[0,"bject):\n"],[1,"    \n    def rand_range():\n        \"\"\"Return a random complex number bounded by real and imaginary axes [-2, 2]\"\"\"\n        return (uniform(-2,2) + uniform(-2,2)*1j)\n    "],[0,"\n    def"]],16,16,16,185],[[[0,"elf,"],[1," "],[0,"c,"],[1," "],[0,"n"],[-1,"=100"],[0,"):\n "]],212,212,15,13],[[[0,"    "],[1,"\n"],[0,"    "],[-1,"self._complexplane=[]\n        self.set=[]\n"],[1,"def setup(self):\n        \"\"\"Setup fixture is run before every test method separately\"\"\"\n        self.c = rand_range()\n        self.n = randint(2,100)\n        self.j = JuliaSet(self.c, self.n)\n        "],[0,"\n   "]],286,286,54,213],[[[0,"liamap(self,"],[1," "],[0,"z):\n        "]],506,506,24,25],[[[0," self.c\n"],[1,"    "],[0,"\n    def"]],544,544,16,20],[[[0,"te(self,"],[1," "],[0,"z):\n    "]],570,570,16,17],[[[0,"       m"],[-1,"="],[1," = "],[0,"0\n      "]],584,584,17,19],[[[0,"ile "],[-1,"True:\n            z=self.juliamap(z)"],[1,"(abs(z) <= 2 or m < self.n):"],[0,"\n   "]],607,607,44,36],[[[0,"   m"],[-1,"=m+"],[1," =+ "],[0,"1\n  "]],649,649,11,12],[[[0," if "],[1,"("],[0,"abs(z)"],[-1,">2"],[1," > 2)"],[0,":\n  "]],670,670,16,20],[[[0,"    "],[1,"el"],[0,"if "],[-1,"m>="],[1,"(m > "],[0,"self.n"],[1,")"],[0,":\n  "]],721,721,20,25],[[[0,"eturn 0\n"],[1,"    "],[0,"\n    def"]],761,761,16,20],[[[0,"def "],[-1,"set_spaci"],[1,"dra"],[0,"ng"],[1,"e"],[0,"(s"],[-1,"elf,d):\n        self._d=d\n        self._complexplane=[complex(x,y) for x in range(-2*int(1/self._d),2*int(1/self._d),1)"],[1,"tart, stop, step):\n        r = start\n        while r < stop:\n            yield r\n            r += step\n    # Generate evenly spaced values over x and y planes\n    _d = 0.001\n    def _complexplane(self, _d):\n        x_range=drange(-2, 2, _d)\n        y_range=drange(-2, 2, _d)\n        z_plane = []\n        for x in x_range:\n           "],[0," for"]],778,778,140,349],[[[0," in "],[1,"y_"],[0,"range"],[-1,"(-2*int(1/"],[1,":\n                z = complex(x, y)\n                z_plane.append(z)\n        return z_plane\n    \n    def set_spacing("],[0,"self"],[-1,"._d),2*int(1/self._d),1)]\n\n    def generate(self):\n        self.set=[self.iterate(a) for a in self._complexplane]\n        return self.set"],[1,", _d):\n        self._d = _d\n        _complexplane(_d)\n        \n    def generate(self):\n        julia_set = set(iterate(_complexplane(_d)))\n"]],1129,1129,160,272]],"time":1443516434218}
{"patch":[[[[0,"explane("],[-1,"_d"],[0,")))\n"]],1387,1387,14,12]],"time":1443515703960}
{"patch":[[[[0,"lexplane"],[-1,"()"],[0,"))\n"]],1386,1386,13,11]],"time":1443515701956}
{"patch":[[[[0,"lane(self, _d):\n"],[1,"\n"],[0,"        x_range="]],981,981,32,33]],"time":1443515635256}
{"patch":[[[[0,"e=drange(-2, 2, "],[1,"sel"],[0,"_d)\n        z_pl"]],1046,1046,32,35]],"time":1443515347552}
{"patch":[[[[0,", 2, sel"],[1,"f."],[0,"_d)\n    "]],1057,1057,16,18]],"time":1443515345540}
{"patch":[[[[0,"(-2, 2, "],[1,"self"],[0,"_d)\n    "]],1020,1020,16,20]],"time":1443515343533}
{"patch":[[[[0," 2, self"],[1,"."],[0,"_d)\n    "]],1024,1024,16,17]],"time":1443515341536}
{"patch":[[[[0,"        "],[1,"self."],[0,"_complex"]],1301,1301,16,21]],"time":1443515131036}
{"patch":[[[[0,"       s"],[-1,"elf."],[0,"_complex"]],1302,1302,20,16]],"time":1443515099928}
{"patch":[[[[0,"        "],[-1,"s"],[0,"_complex"]],1301,1301,17,16]],"time":1443515097924}
{"patch":[[[[0,"explane("],[-1,"_d"],[0,")\n      "]],1315,1315,18,16]],"time":1443515072906}
{"patch":[[[[0,"lexplane"],[-1,"()"],[0,"\n       "]],1314,1314,18,16]],"time":1443515070918}
{"patch":[[[[0,"        "],[1," "],[0,"_complex"]],1301,1301,16,17]],"time":1443515068936}
{"patch":[[[[0,"        "],[-1," _complexplane"],[0,"\n       "]],1301,1301,30,16]],"time":1443515061448}
{"patch":[[[[0,"       \n"],[-1,"        \n"],[0,"    def "]],1302,1302,25,16]],"time":1443515029200}
{"patch":[[[[0,"f._d = _"],[-1,"d"],[0,"\n       "]],1291,1291,17,16]],"time":1443514963604}
{"patch":[[[[0,"lf._d = "],[-1,"_"],[0,"\n       "]],1290,1290,17,16]],"time":1443514961548}
{"patch":[[[[0,"  self._"],[-1,"d = "],[0,"\n       "]],1286,1286,20,16]],"time":1443514959540}
{"patch":[[[[0,"    self"],[-1,"._"],[0,"\n       "]],1284,1284,18,16]],"time":1443514957532}
{"patch":[[[[0,"       s"],[-1,"elf"],[0,"\n       "]],1281,1281,19,16]],"time":1443514955536}
{"patch":[[[[0,"f, _d):\n"],[-1,"        s"],[0,"\n       "]],1272,1272,25,16]],"time":1443514953529}
{"patch":[[[[0,"cing(self, _d):\n"],[1,"        _complexplane(self._d)"],[0,"\n        \n    de"]],1264,1264,32,62]],"time":1443514949801}
{"patch":[[[[0,"f, _d):\n"],[1,"\n"],[0,"        "]],1272,1272,16,17]],"time":1443514899918}
{"patch":[[[[0,"elf._d = 0.0"],[-1,"01"],[0,"\n    \n    de"]],271,271,26,24]],"time":1443514873104}
{"patch":[[[[0,"self._d "],[-1,"= 0.0"],[0,"\n    \n  "]],270,270,21,16]],"time":1443514871101}
{"patch":[[[[0,"self"],[-1,"._d "],[0,"\n   "]],270,270,12,8]],"time":1443514869099}
{"patch":[[[[0,"        "],[-1,"self"],[0,"\n    \n  "]],262,262,20,16]],"time":1443514867097}
{"patch":[[[[0,"f.n = n\n"],[-1,"        \n"],[0,"    \n   "]],254,254,25,16]],"time":1443514865090}
{"patch":[[[[0,"cing(self, _d):\n"],[1,"        self._d = _d"],[0,"\n        _comple"]],1240,1240,32,52]],"time":1443514828675}
{"patch":[[[[0,"explane("],[-1,"s"],[0,"elf._d)\n"]],1291,1291,17,16]],"time":1443514813620}
{"patch":[[[[0,"explane("],[1,"a"],[0,"elf._d)\n"]],1291,1291,16,17]],"time":1443514811616}
{"patch":[[[[0,"xplane(a"],[-1,"elf."],[0,"_d)\n    "]],1292,1292,20,16]],"time":1443514809063}
{"patch":[[[[0,"explane("],[-1,"a"],[0,"_d)\n    "]],1291,1291,17,16]],"time":1443514807065}
{"patch":[[[[0,"explane("],[-1,"_"],[0,"d)\n     "]],1291,1291,17,16]],"time":1443514799375}
{"patch":[[[[0,"lf._d = "],[-1,"_"],[0,"d\n      "]],1266,1266,17,16]],"time":1443514796372}
{"patch":[[[[0,"acing(self, "],[-1,"_"],[0,"d):\n        "]],1239,1239,25,24]],"time":1443514778981}
{"patch":[[[[0,"lf, c, n"],[1,", _"],[0,"):\n     "]],213,213,16,19]],"time":1443514669270}
{"patch":[[[[0," c, n, _"],[1,"d"],[0,"):\n     "]],216,216,16,17]],"time":1443514667305}
{"patch":[[[[0,"f.n = n\n"],[1,"        self._d = _d\n"],[0,"    \n   "]],258,258,16,37]],"time":1443514616125}
{"patch":[[[[0,"f._d = _"],[-1,"d"],[0,"\n    \n  "]],277,277,17,16]],"time":1443514589161}
{"patch":[[[[0,"lf._"],[-1,"d = _"],[0,"\n   "]],276,276,13,8]],"time":1443514587156}
{"patch":[[[[0,"       s"],[-1,"elf._"],[0,"\n    \n  "]],267,267,21,16]],"time":1443514585153}
{"patch":[[[[0,"= n\n"],[-1,"        s\n"],[0,"    "]],262,262,18,8]],"time":1443514583149}
{"patch":[[[[0,"f, c, n,"],[-1," _d"],[0,"):\n     "]],214,214,19,16]],"time":1443514581148}
{"patch":[[[[0,"lf, c, n"],[-1,","],[0,"):\n     "]],213,213,17,16]],"time":1443514579360}
{"patch":[[[[0,"lf, c, n"],[1,", _"],[0,"):\n     "]],213,213,16,19]],"time":1443514531437}
{"patch":[[[[0," c, n, _"],[1,"d"],[0,"):\n     "]],216,216,16,17]],"time":1443514529477}
{"patch":[[[[0,"f.n = n\n"],[1,"\n"],[0,"    \n   "]],258,258,16,17]],"time":1443514398881}
{"patch":[[[[0,"f.n = n\n"],[1,"        self._d = _d"],[0,"\n    \n  "]],258,258,16,36]],"time":1443514396909}
{"patch":[[[[0,"self.n)\n"],[1,"\n"],[0,"        "]],480,480,16,17]],"time":1443514388287}
{"patch":[[[[0,"self.n)\n"],[1,"        self._d = 0.001"],[0,"\n       "]],480,480,16,39]],"time":1443514385844}
{"patch":[[[[0,"elf._d = 0.0"],[-1,"01"],[0,"\n        \n  "]],497,497,26,24]],"time":1443514133719}
{"patch":[[[[0,"self._d "],[-1,"= 0.0"],[0,"\n       "]],496,496,21,16]],"time":1443514131709}
{"patch":[[[[0,"    self"],[-1,"._d "],[0,"\n       "]],492,492,20,16]],"time":1443514129709}
{"patch":[[[[0,"        "],[-1,"self"],[0,"\n       "]],488,488,20,16]],"time":1443514127713}
{"patch":[[[[0,"       \n"],[-1,"        \n"],[0,"    def "]],489,489,25,16]],"time":1443514125703}
{"patch":[[[[0,"lf._d = "],[-1,"_d"],[1,"0.00"],[0,"\n    \n  "]],276,276,18,20]],"time":1443514123704}
{"patch":[[[[0,"._d = 0."],[-1,"00"],[0,"\n    \n  "]],278,278,18,16]],"time":1443514121699}
{"patch":[[[[0,"elf._d ="],[-1," 0."],[0,"\n    \n  "]],275,275,19,16]],"time":1443514119697}
{"patch":[[[[0,"    self"],[-1,"._d ="],[0,"\n    \n  "]],270,270,21,16]],"time":1443514117840}
{"patch":[[[[0,"= n\n"],[-1,"        self\n"],[0,"    "]],262,262,21,8]],"time":1443514115688}
{"patch":[[[[0,"f, c, n,"],[-1," _d"],[0,"):\n     "]],214,214,19,16]],"time":1443514113692}
{"patch":[[[[0,"lf, c, n"],[-1,","],[0,"):\n     "]],213,213,17,16]],"time":1443514111679}
{"patch":[[[[0,"2)*1j)\n    \n"],[1,"    c = \n    \n"],[0,"    def __in"]],182,182,24,38]],"time":1443514109036}
{"patch":[[[[0,"   \n"],[-1,"    c = \n    \n"],[0,"    "]],190,190,22,8],[[[0,"lf, "],[-1,"c, n"],[1,"_d"],[0,"):\n "]],213,213,12,10],[[[0,"c = "],[-1,"c\n        self.n = n"],[1,"_d"],[0,"\n   "]],235,235,28,10],[[[0,"self.n)\n"],[1,"        self\n"],[0,"        "]],435,435,16,29]],"time":1443514107044}
{"patch":[[[[0,"    self"],[1,"._d = 0.001"],[0,"\n       "]],447,447,16,27]],"time":1443514105072}
{"patch":[[[[0,"self._d = 0."],[-1,"001"],[0,"\n        \n  "]],451,451,27,24]],"time":1443514086996}
{"patch":[[[[0," self._d"],[-1," = 0."],[0,"\n       "]],450,450,21,16]],"time":1443514084984}
{"patch":[[[[0,"    self"],[-1,"._d"],[0,"\n       "]],447,447,19,16]],"time":1443514082984}
{"patch":[[[[0,"        "],[-1,"self"],[0,"\n       "]],443,443,20,16]],"time":1443514080978}
{"patch":[[[[0,"       \n"],[-1,"        \n"],[0,"    def "]],444,444,25,16]],"time":1443514078980}
{"patch":[[[[0,"elf.c = "],[-1,"_d"],[1,"c\n"],[0,"\n    \n  "]],231,231,18,18]],"time":1443514076975}
{"patch":[[[[0,"(self, _"],[-1,"d"],[0,"):\n     "]],210,210,17,16],[[[0,"f.c = c\n"],[1,"        self.n = n"],[0,"\n    \n  "]],232,232,16,34]],"time":1443514074972}
{"patch":[[[[0,"_(self, "],[-1,"_"],[1,"c, n"],[0,"):\n     "]],209,209,17,20]],"time":1443514072967}
{"patch":[[[[0,",2)*1j)\n"],[1,"   \n"],[0,"    \n   "]],181,181,16,20]],"time":1443514070968}
{"patch":[[[[0,"*1j)\n   "],[1," \n"],[0,"\n    \n  "]],184,184,16,18]],"time":1443514068960}
{"patch":[[[[0,"j)\n    \n"],[1,"    c = "],[0,"\n    \n  "]],186,186,16,24]],"time":1443514067000}
{"patch":[[[[0,"   \n    "],[-1,"c = "],[0,"\n    \n  "]],190,190,20,16]],"time":1443514060523}
{"patch":[[[[0,")\n    \n    \n"],[-1,"    \n"],[0,"    def __in"]],187,187,29,24]],"time":1443514058520}
{"patch":[[[[0,"j)\n    \n"],[-1,"    \n"],[0,"    def "]],186,186,21,16]],"time":1443514056519}
{"patch":[[[[0," planes\n"],[1,"       "],[0,"    _d ="]],917,917,16,23]],"time":1443513970954}
{"patch":[[[[0,"        "],[1," "],[0,"_d = 0.0"]],928,928,16,17]],"time":1443513968948}
{"patch":[[[[0,"nes\n"],[-1,"            _d = 0.001"],[0,"\n   "]],921,921,30,8]],"time":1443513964813}
{"patch":[[[[0,"f, _d):\n"],[1,"        _d = 0.001"],[0,"\n       "]],951,951,16,34]],"time":1443513962584}
{"patch":[[[[0,"e(self, "],[-1,"_"],[0,"d):\n    "]],946,946,17,16]],"time":1443513959325}
{"patch":[[[[0,"    "],[-1,"_d = 0.001"],[0,"\n   "]],962,962,18,8]],"time":1443513956416}
{"patch":[[[[0,"lf, d):\n"],[-1,"        \n"],[0,"        "]],950,950,25,16]],"time":1443513954449}
{"patch":[[[[0,"f.n = n\n"],[1,"   \n"],[0,"    \n   "]],254,254,16,20]],"time":1443513950269}
{"patch":[[[[0," = n\n   "],[1," \n    "],[0,"\n    \n  "]],257,257,16,22]],"time":1443513948266}
{"patch":[[[[0," n\n    \n    "],[1,"_d = 0.001"],[0,"\n    \n    de"]],259,259,24,34]],"time":1443513946260}
{"patch":[[[[0,"= 0.001\n"],[-1,"    \n"],[0,"    def "]],274,274,21,16]],"time":1443513933506}
{"patch":[[[[0,"d = "],[-1,"0.001"],[0,"\n   "]],272,272,13,8]],"time":1443513931506}
{"patch":[[[[0,"    _d ="],[-1," "],[0,"\n    def"]],267,267,17,16]],"time":1443513929507}
{"patch":[[[[0,"   \n    "],[-1,"_d ="],[0,"\n    def"]],263,263,20,16]],"time":1443513927507}
{"patch":[[[[0," n\n    \n"],[-1,"    \n"],[0,"    def "]],259,259,21,16]],"time":1443513925545}
{"patch":[[[[0,"f.n = n\n"],[1,"        self._d = _d\n"],[0,"    \n   "]],254,254,16,37]],"time":1443513915185}
{"patch":[[[[0,"lf, c, n"],[1,", _d"],[0,"):\n     "]],213,213,16,20]],"time":1443513913187}
{"patch":[[[[0,",2)*1j)\n    "],[1,"\n\n    "],[0,"\n    def __i"]],181,181,24,30]],"time":1443513900580}
{"patch":[[[[0,"j)\n    \n"],[1,"    n = 100"],[0,"\n    \n  "]],186,186,16,27]],"time":1443513898617}
{"patch":[[[[0,"f._d = _"],[-1,"d"],[0,"\n    \n  "]],294,294,17,16]],"time":1443513867711}
{"patch":[[[[0,"lf._d = "],[-1,"_"],[1,"0.001"],[0,"\n    \n  "]],293,293,17,21]],"time":1443513865716}
{"patch":[[[[0,"   n = 1"],[-1,"00"],[0,"\n    \n  "]],195,195,18,16]],"time":1443513828924}
{"patch":[[[[0,"    "],[-1,"n = 1"],[0,"\n   "]],194,194,13,8]],"time":1443513826922}
{"patch":[[[[0,")\n    \n    \n"],[-1,"    \n"],[0,"    def __in"]],187,187,29,24]],"time":1443513824919}
{"patch":[[[[0,"j)\n    \n"],[-1,"    \n"],[0,"    def "]],186,186,21,16]],"time":1443513822917}
{"patch":[[[[0," = 0"],[-1,".001"],[0,"\n   "]],281,281,12,8]],"time":1443513818369}
{"patch":[[[[0,"lf._d = "],[-1,"0"],[0,"\n    \n  "]],276,276,17,16]],"time":1443513816405}
{"patch":[[[[0," self._d"],[-1," = "],[0,"\n    \n  "]],273,273,19,16]],"time":1443513808586}
{"patch":[[[[0,"   self."],[-1,"_d"],[0,"\n    \n  "]],271,271,18,16]],"time":1443513806764}
{"patch":[[[[0,"    self"],[-1,"."],[0,"\n    \n  "]],270,270,17,16]],"time":1443513804764}
{"patch":[[[[0,"= n\n"],[-1,"        self\n"],[0,"    "]],262,262,21,8]],"time":1443513802588}
{"patch":[[[[0,", n,"],[-1," _d"],[0,"):\n "]],218,218,11,8]],"time":1443513800584}
{"patch":[[[[0,"lf, c, n"],[-1,","],[0,"):\n     "]],213,213,17,16]],"time":1443513798601}
{"patch":[[[[0,"elf.n)\n        \n"],[1,"   \n"],[0,"    def juliamap"]],456,456,32,36]],"time":1443513467204}
{"patch":[[[[0,"    \n   "],[1,"     "],[0,"\n    def"]],467,467,16,21]],"time":1443513464719}
{"patch":[[[[0,".n)\n"],[-1,"        \n        \n"],[0,"    "]],459,459,26,8]],"time":1443513462715}
{"patch":[[[[0,"\n   "],[-1," def setup(self):\n        \"\"\"Setup fixture is run before every test method separately\"\"\"\n        self.c = rand_range()\n        self.n = randint(2,100)\n        self.j = JuliaSet(self.c, self.n)"],[0,"\n   "]],266,266,200,8]],"time":1443513460719}
{"patch":[[[[0,"    \n   "],[1," "],[0,"\n    def"]],262,262,16,17]],"time":1443513458719}
{"patch":[[[[0," n\n    \n"],[-1,"    \n"],[0,"    def "]],259,259,21,16]],"time":1443513449013}
{"patch":[[[[0,"2)*1j)\n    \n"],[1,"   \n"],[0,"    def __in"]],182,182,24,28]],"time":1443513444052}
{"patch":[[[[0,"ange():\n"],[-1,"    "],[0,"    \"\"\"R"]],43,43,20,16],[[[0,", 2]\"\"\"\n"],[-1,"    "],[0,"    retu"]],127,127,20,16],[[[0,"    \n   "],[1," "],[0,"\n    def"]],181,181,16,17]],"time":1443513442048}
{"patch":[[[[0,"    "],[-1,"def rand_range():\n    \"\"\"Return a random complex number bounded by real and imaginary axes [-2, 2]\"\"\"\n    return (uniform(-2,2) + uniform(-2,2)*1j)"],[0,"\n   "]],29,29,155,8]],"time":1443513433898}
{"patch":[[[[0,":\n    \n    \n"],[-1,"    \n    \n"],[0,"    def __in"]],22,22,34,24]],"time":1443513414721}
{"patch":[[[[0,"):\n    \n"],[-1,"    \n"],[0,"    def "]],21,21,21,16]],"time":1443513412715}
{"patch":[[[[0,"bject):\n    "],[1,"\n\n    "],[0,"\n    def __i"]],16,16,24,30]],"time":1443512951488}
{"patch":[[[[0,"):\n    \n"],[1,"    c = complex(0.01, 0.09)"],[0,"\n    \n  "]],21,21,16,43]],"time":1443512949533}
{"patch":[[[[0,", 0."],[-1,"09"],[0,")\n  "]],49,49,10,8]],"time":1443512885965}
{"patch":[[[[0,"0.01"],[-1,", 0."],[0,")\n  "]],45,45,12,8]],"time":1443512883964}
{"patch":[[[[0,"lex("],[-1,"0.01"],[0,")\n  "]],41,41,12,8]],"time":1443512881961}
{"patch":[[[[0,"comp"],[-1,"lex()"],[0,"\n   "]],37,37,13,8]],"time":1443512879952}
{"patch":[[[[0,"    c = "],[-1,"comp"],[1,"10"],[0,"\n    \n  "]],29,29,20,18]],"time":1443512877956}
{"patch":[[[[0,"  c "],[-1,"= 10"],[0,"\n   "]],31,31,12,8]],"time":1443512875948}
{"patch":[[[[0,"   \n"],[-1,"    c \n"],[0,"    "]],25,25,15,8]],"time":1443512873951}
{"patch":[[[[0,"):\n    \n"],[-1,"    \n"],[0,"    def "]],21,21,21,16]],"time":1443512871988}
{"patch":[[[[0,"z**2 + s"],[-1,"elf."],[0,"c\n    \n "]],144,144,20,16]],"time":1443512867402}
{"patch":[[[[0," z**2 + "],[-1,"s"],[0,"c\n    \n "]],143,143,17,16]],"time":1443512865440}
{"patch":[[[[0," z**2 + "],[1,"self"],[0,"c\n    \n "]],143,143,16,20]],"time":1443512851344}
{"patch":[[[[0,"2 + self"],[1,"."],[0,"c\n    \n "]],147,147,16,17]],"time":1443512849340}
{"patch":[[[[0,"n z*"],[-1,"*2"],[0," + s"]],142,142,10,8]],"time":1443512832972}
{"patch":[[[[0,"eturn z*"],[1,"z"],[0," + self."]],138,138,16,17]],"time":1443512831005}
{"patch":[[[[0,"lf.c = c"],[1,"omplex(0.0,0.9)"],[0,"\n       "]],69,69,16,31]],"time":1443512633344}
{"patch":[[[[0,"elf.n = "],[-1,"n"],[1,"10"],[0,"\n    \n  "]],102,102,17,18]],"time":1443512631344}
{"patch":[[[[0,".9)\n"],[-1,"        self."],[0,"n = 10"],[1,"0"],[0,"\n   "]],89,89,27,15]],"time":1443512629345}
{"patch":[[[[0,"n):\n        "],[1,"    "],[0,"self.c = com"]],55,55,24,28],[[[0,".0,0.9)\n"],[1,"    "],[0,"n = 100\n"]],89,89,16,20]],"time":1443512627340}
{"patch":[[[[0,"n):\n    "],[-1,"        self."],[0,"c = comp"]],55,55,29,16]],"time":1443512625356}
{"patch":[[[[0,"   \n"],[-1,"    def __init__(self, c, n):\n"],[0,"    "]],25,25,38,8]],"time":1443512623344}
{"patch":[[[[0,"ject):\n    \n"],[1,"    def __init__(self, c, n):\n"],[0,"    c = comp"]],17,17,24,54]],"time":1443512142210}
{"patch":[[[[0,"n):\n    "],[1,"        self."],[0,"c = comp"]],55,55,16,29]],"time":1443512140203}
{"patch":[[[[0,"n):\n        "],[-1,"    "],[0,"self.c = com"]],55,55,28,24]],"time":1443512138192}
{"patch":[[[[0,".0,0.9)\n"],[-1,"   "],[0," n = 100"]],85,85,19,16]],"time":1443512135756}
{"patch":[[[[0,".0,0.9)\n"],[1," "],[0," n = 100"]],85,85,16,17]],"time":1443512133744}
{"patch":[[[[0,".0,0.9)\n"],[-1,"  "],[0,"n = 100\n"]],85,85,18,16]],"time":1443512130762}
{"patch":[[[[0,".0,0.9)\n"],[1,"        self."],[0,"n = 100\n"]],85,85,16,29]],"time":1443512128764}
{"patch":[[[[0,"n = 100\n"],[1,"        self._d = 0.001\n"],[0,"    \n   "]],106,106,16,40]],"time":1443511477321}
{"patch":[[[[0,"lf, c, n"],[1,", _"],[0,"):\n     "]],48,48,16,19]],"time":1443511475320}
{"patch":[[[[0," c, n, _"],[1,"d"],[0,"):\n     "]],51,51,16,17]],"time":1443511473361}
{"patch":[[[[0,", n,"],[-1," _d"],[0,"):\n "]],53,53,11,8]],"time":1443511372396}
{"patch":[[[[0,"lf, c, n"],[-1,","],[0,"):\n     "]],48,48,17,16]],"time":1443511370399}
{"patch":[[[[0,"= 0."],[-1,"001"],[0,"\n   "]],130,130,11,8]],"time":1443511368396}
{"patch":[[[[0,"f._d"],[-1," = 0."],[0,"\n   "]],125,125,13,8]],"time":1443511366395}
{"patch":[[[[0,"    self"],[-1,"._d"],[0,"\n    \n  "]],118,118,19,16]],"time":1443511364388}
{"patch":[[[[0,"      se"],[-1,"l"],[0,"f"],[1,"l"],[0,"\n    \n  "]],116,116,18,18]],"time":1443511362395}
{"patch":[[[[0,"    "],[-1,"sefl"],[0,"\n   "]],118,118,12,8]],"time":1443511360388}
{"patch":[[[[0,"n = 100\n"],[-1,"        \n"],[0,"    \n   "]],106,106,25,16]],"time":1443511358428}
{"patch":[[[[0,"n = 100\n"],[1,"        self._d = 0.001\n"],[0,"    \n   "]],106,106,16,40]],"time":1443511328390}
{"patch":[[[[0,"lf, c, n"],[1,", _"],[0,"):\n     "]],48,48,16,19]],"time":1443511326382}
{"patch":[[[[0," c, n, _"],[1,"d"],[0,"):\n     "]],51,51,16,17]],"time":1443511324417}
{"patch":[[[[0,", c, n, "],[-1,"_"],[0,"d):\n    "]],50,50,17,16]],"time":1443511073916}
{"patch":[[[[0,"ject):\n    \n"],[1,"\n"],[0,"    def __in"]],17,17,24,25]],"time":1443511017646}
{"patch":[[[[0,"):\n    \n"],[1,"    c = complex(0.0,0.9)"],[0,"\n    def"]],21,21,16,40]],"time":1443511015677}
{"patch":[[[[0,"d):\n"],[-1,"        self.c = complex(0.0,0.9)\n"],[0,"    "]],83,83,42,8]],"time":1443510858558}
{"patch":[[[[0,"elf,"],[-1," c,"],[0," n, "]],72,72,11,8]],"time":1443510856601}
{"patch":[[[[0,"_(self, "],[1,"c,"],[0,"n, d):\n "]],69,69,16,18]],"time":1443510829351}
{"patch":[[[[0,"self, c,"],[1," "],[0,"n, d):\n "]],71,71,16,17]],"time":1443510827373}
{"patch":[[[[0,", c, n, d):\n"],[1,"\n"],[0,"        self"]],75,75,24,25]],"time":1443510806168}
{"patch":[[[[0," n, d):\n"],[1,"        self.c = complex(0.0,0.9)"],[0,"\n       "]],79,79,16,49]],"time":1443510804160}
{"patch":[[[[0,"    c = "],[-1,"complex(0.0,0.9)"],[0,"\n    def"]],29,29,32,16]],"time":1443510802152}
{"patch":[[[[0,"  \n    c"],[-1," = "],[0,"\n    def"]],26,26,19,16]],"time":1443510798041}
{"patch":[[[[0,"   \n    "],[-1,"c"],[0,"\n    def"]],25,25,17,16]],"time":1443510796040}
{"patch":[[[[0,"t):\n    "],[-1,"\n    "],[1,"''"],[0,"\n    def"]],20,20,21,18]],"time":1443510791200}
{"patch":[[[[0,"    "],[-1,"''"],[0,"\n   "]],24,24,10,8]],"time":1443510789272}